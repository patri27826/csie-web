"""
Django settings for locallibrary project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'cg#p$g+j9tax!#a3cup@1$8obt2_+&k3q+pmu)5%asj6yjpkag'
import os
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'cg#p$g+j9tax!#a3cup@1$8obt2_+&k3q+pmu)5%asj6yjpkag')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'news.apps.NewsConfig',
    'members.apps.MembersConfig',
    'info.apps.InfoConfig',
    'home.apps.HomeConfig',
    'education.apps.EducationConfig',
    'admission.apps.AdmissionConfig',
    'research.apps.ResearchConfig',
    'links.apps.LinksConfig',
    'alumni_area.apps.AlumniAreaConfig',
    'multiselectfield',
    'django_summernote',
    'rosetta',
    'parler',
    'haystack',
    'django.contrib.postgres',
    'import_export',
    'dbbackup',
    'guardian',
    'admin_reorder',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'locallibrary.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',     ####### add
                'home.context_processors.navlinks',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'locallibrary.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'zh-hant'
# LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True

from django.utils.translation import gettext_lazy as _
LANGUAGES = (
    ('zh-hant', _('Traditional Chinese')),
    ('en', ('English')),
)
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
PARLER_LANGUAGES = {
    1: (
        {'code': 'zh-hant',}, # zh-hant
        {'code': 'en',}, # English
    ),
    'default': {
        'fallbacks': ['zh-hant'],
        'hide_untranslated': False,
    }
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'news.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    },
}
# HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'

# Add to test email:
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'



# Heroku: Update database configuration from $DATABASE_URL.
# import dj_database_url
# db_from_env = dj_database_url.config(conn_max_age=500)
# DATABASES['default'].update(db_from_env)
DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': "/var/www/csie_web/backup/"}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# The absolute path to the directory where collectstatic will collect static files for deployment.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# The URL to use when referring to static files (where they will be served from)
STATIC_URL = 'templates/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'templates/static'),
    os.path.join(BASE_DIR, 'alumni_area/static/'),
]

# Static file serving.
# http://whitenoise.evans.io/en/stable/django.html#django-middleware
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Base url to serve media files
MEDIA_URL = '/media/'

# Path where media is stored
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ALLOWED_HOSTS=["*"]

IMPORT_EXPORT_USE_TRANSACTIONS = True
DEFAULT_AUTO_FIELD='django.db.models.AutoField'

ADMIN_REORDER = (
    {'app': 'news', 'models': ('news.Post','news.Type', 'news.Status','news.PostFile','news.PostImage')},
    {'app': 'info', 'models': ('info.Info','info.Visiting','info.TextInfo','info.Type')},
    {'app': 'members', 'models': ('members.Member','members.Office_Member','members.Department','members.Classification')},
    {'app': 'research', 'models': ('research.Areas','research.Centers','research.International')},
    {'app': 'education', 'models': ('education.TextInfo','education.Type')},
    {'app': 'admission', 'models': ('admission.TextInfo','admission.Type')},
    {'app': 'links', 'models': ('links.Other','links.TextInfo','links.Type')},
    {'app': 'home', 'models': ('home.Carousel','home.Link','home.ITNews','home.homeInfo','home.homeImage','home.externalLink','home.Image')},
    'django_summernote',
    'auth',
    'sites',

)